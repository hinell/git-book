{                                             // NOTICE: Comments aren't parth of the JSON spec, so Use jsmin to strip out them
  "compilerOptions": {
     "watch"                  : true         // Run the compiler in watch mode. Watch input files and trigger recompilation on changes.
  //,"jsx"                    : "preserve"    // Support JSX, possible modes: react, preserve and react-native
    ,"module"                 : "commonjs"    // "none", "CommonJS", "AMD", "System", "UMD", "ES6", or "ES2015".
    ,"target"                 : "es5"         // "ES3" (default), "ES5", "ES6"/"ES2015", "ES2016", "ES2017" or "ESNext".
    ,"allowJs"                : true          // Allow JavaScript files to be used during compilation
    ,"importHelpers"          : true          // Import helper-function (e.g. __extends, __rest, etc..) from "tslib" (installed separately)
    ,"pretty"                 : false         // Stylize errors and messages using color and context
    ,"traceResolution"        : false         // Report module resolution log messages.
  //,"moduleResolution        : "node"        // Determine how modules get resolved. Either "node" for Node.js/io.js style resolution, or "classic"
    ,"skipLibCheck"           : false         // Skip type checking of all declaration files (*.d.ts).
    ,"removeComments"         : false         // Remove all comments except copy-right header comments beginning with /*!
    ,"sourceMap"              : false
    ,"inlineSourceMap"        : false         // Emit a single file with source maps instead of having a separate file.
    ,"inlineSources"          : false         // Emit the source alongside the sourcemaps within a single file
    ,"declaration"            : false         // Generates corresponding .d.ts file
    ,"strict"                 : true         // Enable all strict type-checking options.
    ,"alwaysStrict"           : false         // Parse in strict mode and emit "use strict" for each source file
    ,"strictNullChecks"       : false         // Makes the null and undefined values only assignable to themselves and any (excepting the undefined that is also assignable to void)
    ,"noImplicitAny"          : false         // Raise error on expressions and declarations with an implied any type.
    ,"noEmit"                 : false         // Do not emit .js outputs
    ,"noImplicitReturns"	    : false         // Report error when not all code paths in function return a value.
    ,"noImplicitThis"	        : false         // Raise error on this expressions with an implied any type.
    ,"noImplicitUseStrict"	  : true          // Do not emit "use strict" directives in module output.
    ,"noEmitOnError"          : true          // Do not emit .js outputs
    ,"allowUnreachableCode"   : true
  //,"outFile"                : "./index.js"  // Concatenate and emit output to single file. See output file order documentation for more details.
  //,"paths"                  : []            // List of path mapping entries for module names to locations relative to the baseUrl
  //,"typeRoots"              : ["node_modules/@types"] // roots of packages to be included into compilation
    ,"lib"                    : ["DOM","ES2015","ES2016.Array.Include"]            // for --target ES5: DOM,ES5,ScriptHost
                                              // for ES6: DOM,ES6,DOM.Iterable,ScriptHost
  //,"outDir"                 : "./dist"     // Redirect output structure to the directory.
                                              // ► For --target ES5: DOM,ES5,ScriptHost
                                              // ► For --target ES6: DOM,ES6,DOM.Iterable,ScriptHost
  }
//,"files"    : []  // Uncomment when using typings tool and typings/index.d.ts exists
  ,"include"  : ["./src/**/*.*"]
//,"exclude"  : []                //  Default to: "node_modules", "bower_components", "jspm_packages" and <outDir>
}
